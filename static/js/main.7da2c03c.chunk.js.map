{"version":3,"sources":["FormEditor.module.css","Header.module.css","Sidepanel.module.css","App.module.css","Form.module.css","Questionnode.module.css","Endnode.module.css","ButtonEdge.js","Header.tsx","helpers.tsx","App.tsx","Questionnode.tsx","Sidepanel.tsx","Endnode.tsx","Form.jsx","form.txt","FormEditor.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ButtonEdge","id","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","style","arrowHeadType","data","markerEndId","removeEdge","useContext","RemoveEdgeContext","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","className","d","width","height","x","foreignObjectSize","y","requiredExtensions","onClick","event","evt","stopPropagation","console","log","onEdgeClick","Header","props","styles","headerPanel","logo","logoIcon","onChange","e","setTitle","target","value","title","itemsContainer","headerItem","createNode","NodeTypes","Start","headerItemLabel","Question","End","onExport","onSave","onLoadSave","onTestForm","vectorAdd","vector1","vector2","parseToGraph","flowData","formStyles","startNodeId","output","startId","nodeMap","element","isNode","type","question","answers","map","a","text","nextId","result","isEdge","source","parseInt","sourceHandle","download","content","fileName","contentType","document","createElement","file","Blob","href","URL","createObjectURL","click","fileToJSON","Promise","resolve","reject","fileReader","FileReader","onload","JSON","parse","onerror","error","readAsText","Questionnode","selectedNodeId","SelectedNodeIdContext","wrapperClassName","questionNodeWrapper","selected","questionWrapper","position","Position","Left","questionNodeText","dangerouslySetInnerHTML","__html","answerList","index","answerWrapper","answerText","Right","Sidepanel","nodeData","sidePanel","sidePanelLabel","rows","sidePanelTextInput","newNodeData","setNodeData","setQuestion","answerHeader","i","splice","removeAnswer","iconBtn","setAnswerText","push","panelBtn","deleteNode","deleteBtn","setResultText","stringify","Endnode","wrapper","resultText","questionText","color","fontSize","selectedAns","setSelectedAns","answerStyles","selectedStyle","selectedStyles","Answer","answer","border","backgroundColor","Form","useState","questionStack","setQuestionStack","answerMap","setAnswerMap","formData","formWrapper","form","length","concat","qData","qid","aid","newAMap","Object","assign","newStack","hasReached","currQid","endWrapper","endTitle","endResult","Panel","panelId","selectedId","sideBarItem","setSelectedId","children","FormEditor","setSelected","setStyle","key","copyObj","setFormStyles","prop","questionStyle","setAnswer","answerStyle","setSelectedProp","setResult","resultStyle","formEditor","sideBar","main","heading","property","subheading","formStyle","setForm","Error","renderContent","React","createContext","App","rfInstance","setRfInstance","lastSelectedPos","setLastSelectedPos","showForm","setShowForm","fileInput","useRef","setSelectedNodeId","flowElements","setFlowElements","Date","now","toString","label","createStartNode","createQuestionNode","createEndNode","domElem","current","onchange","files","json","elements","alert","formdata","fetch","formHtml","resp","htmlStr","formDoc","DOMParser","parseFromString","getElementById","textContent","documentElement","outerHTML","replace","toObject","app","accept","ref","backdrop","backdropElementWrapper","backdropMain","backdropHeader","backdropRemoveBtn","removed","filter","o","removeNode","getSelectedNodeData","setNode","flowWrapper","Provider","nodeTypes","end","edgeTypes","buttonedge","onElementClick","onEdgeUpdate","oldEdge","newConnection","updateEdge","onConnect","params","addEdge","onLoad","variant","BackgroundVariant","Dots","gap","size","nodeColor","node","nodeStrokeWidth","controls","customControlBtn","controlStartIcon","controlsQuestionIcon","controlsEndIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7da2c03c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"FormEditor_heading__3cR8M\",\"subheading\":\"FormEditor_subheading__29qys\",\"property\":\"FormEditor_property__3n28p\",\"formEditor\":\"FormEditor_formEditor__1PxhO\",\"sideBar\":\"FormEditor_sideBar__2pn2k\",\"sideBarItem\":\"FormEditor_sideBarItem__DMKXB\",\"selected\":\"FormEditor_selected__3nE-h\",\"main\":\"FormEditor_main__217fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__1_msB\",\"logoIcon\":\"Header_logoIcon__c47Hc\",\"title\":\"Header_title__2VpMf\",\"headerPanel\":\"Header_headerPanel__3TNwh\",\"itemsContainer\":\"Header_itemsContainer__Wdp3U\",\"headerItemLabel\":\"Header_headerItemLabel__1jLLQ\",\"headerItem\":\"Header_headerItem__23q8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidePanel\":\"Sidepanel_sidePanel__3a658\",\"sidePanelLabel\":\"Sidepanel_sidePanelLabel__1ZEtV\",\"sidePanelTextInput\":\"Sidepanel_sidePanelTextInput__2HnYh\",\"panelBtn\":\"Sidepanel_panelBtn__3H8fA\",\"deleteBtn\":\"Sidepanel_deleteBtn__e2VaB Sidepanel_panelBtn__3H8fA\",\"iconBtn\":\"Sidepanel_iconBtn___qr-z\",\"answerWrapper\":\"Sidepanel_answerWrapper__2a6EB\",\"answerHeader\":\"Sidepanel_answerHeader__QkmT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"flowWrapper\":\"App_flowWrapper__39H7h\",\"fileInput\":\"App_fileInput__OeFCF\",\"backdrop\":\"App_backdrop__1J_fz\",\"backdropElementWrapper\":\"App_backdropElementWrapper__Jj-rr\",\"backdropRemoveBtn\":\"App_backdropRemoveBtn__2m8Ct\",\"backdropHeader\":\"App_backdropHeader__28V_f\",\"backdropMain\":\"App_backdropMain__2R1nr\",\"controls\":\"App_controls__14oJX\",\"customControlBtn\":\"App_customControlBtn__3XnkQ\",\"controlStartIcon\":\"App_controlStartIcon__EY1MC\",\"controlsQuestionIcon\":\"App_controlsQuestionIcon__2Qw4v\",\"controlsEndIcon\":\"App_controlsEndIcon__2HrRA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Form_formWrapper__2N2X-\",\"questionWrapper\":\"Form_questionWrapper__1qGAg\",\"questionText\":\"Form_questionText__16sDA\",\"answer\":\"Form_answer__2uEds\",\"selected\":\"Form_selected__Q6STM\",\"endWrapper\":\"Form_endWrapper__1VwxS\",\"endTitle\":\"Form_endTitle__sS77_\",\"endResult\":\"Form_endResult__1iDh0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionNodeWrapper\":\"Questionnode_questionNodeWrapper__1H-8v\",\"selected\":\"Questionnode_selected___BzoX\",\"questionWrapper\":\"Questionnode_questionWrapper__2MD59\",\"questionHandle\":\"Questionnode_questionHandle__2gcb5\",\"questionNodeText\":\"Questionnode_questionNodeText__1Z2Rj\",\"answerWrapper\":\"Questionnode_answerWrapper__M-V40\",\"answerText\":\"Questionnode_answerText__2NCQw\",\"answerList\":\"Questionnode_answerList__1vg8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Endnode_wrapper__2tmgF\",\"selected\":\"Endnode_selected__2hW_g\",\"resultText\":\"Endnode_resultText__DyQCT\"};","import React, { useContext } from 'react';\nimport {\n  getBezierPath,\n  getEdgeCenter,\n  getMarkerEnd,\n} from 'react-flow-renderer';\nimport { RemoveEdgeContext } from './App';\n\nimport './index.css';\n\nconst foreignObjectSize = 40;\n\nexport default function ButtonEdge({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) \n{ \n  const removeEdge = useContext(RemoveEdgeContext);\n  const onEdgeClick = (evt, id) => {\n    evt.stopPropagation();\n    console.log(`remove ${id}`);\n    removeEdge(id);\n  };\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  });\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  });\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n        requiredExtensions=\"http://www.w3.org/1999/xhtml\"\n      >\n        <button\n          className=\"edgebutton\"\n          onClick={(event) => onEdgeClick(event, id)}\n        >\n          X\n        </button>\n      </foreignObject>\n    </>\n  );\n}","import React from 'react';\nimport styles from './Header.module.css';\nimport { FaFlagCheckered, FaQuestionCircle, FaPlay,\n  FaFileExport, FaSave, FaCloudUploadAlt, FaRobot } from \"react-icons/fa\";\nimport { BiNetworkChart } from \"react-icons/bi\";\nimport { NodeTypes } from './App';\n\ntype CreateNode = (type: NodeTypes) => void;\n\ninterface HeaderProps {\n  title: string;\n  setTitle: Function;\n  createNode: CreateNode;\n  onExport: Function;\n  onSave: Function;\n  onLoadSave: Function;\n  onTestForm: Function;\n}\n\nconst Header: React.FC<HeaderProps> = (props: HeaderProps) => {\n  return (\n    <div className={styles.headerPanel}>\n      <div className={styles.logo}>\n        <BiNetworkChart className={styles.logoIcon}/>\n        <input\n          onChange={e => {\n          props.setTitle(e.target.value);\n        }}\n        value={props.title} className={styles.title}/>\n      </div>\n      <div className={styles.itemsContainer}>\n        <div className={styles.headerItem}\n          onClick={() => props.createNode(NodeTypes.Start)}>\n          <div className={styles.headerItemLabel}>Start Node</div>\n          <FaPlay/>\n        </div>\n        <div className={styles.headerItem}\n          onClick={() => props.createNode(NodeTypes.Question)}>\n          <div className={styles.headerItemLabel}>Question Node</div>\n          <FaQuestionCircle/>\n        </div>\n        <div className={styles.headerItem}\n          onClick={() => props.createNode(NodeTypes.End)}>\n          <div className={styles.headerItemLabel}>End Node</div>\n          <FaFlagCheckered/>\n        </div>\n        <div className={styles.headerItem}\n          onClick={() => props.onExport()}>\n          <div className={styles.headerItemLabel}>Export</div>\n          <FaFileExport/>\n        </div>\n        <div className={styles.headerItem}\n          onClick={() => props.onSave()}>\n          <div className={styles.headerItemLabel}>Save</div>\n          <FaSave/>\n        </div>\n        <div className={styles.headerItem}\n          onClick={() => props.onLoadSave()}>\n          <div className={styles.headerItemLabel}>Upload Save</div>\n          <FaCloudUploadAlt/>\n        </div>\n        <div className={styles.headerItem}\n          onClick={() => props.onTestForm()}>\n          <div className={styles.headerItemLabel}>Test Form</div>\n          <FaRobot/>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header;","import { isEdge, isNode } from \"react-flow-renderer\";\n\nexport interface Vector {\n  x: number;\n  y: number;\n}\n\nexport function vectorAdd(vector1: Vector, vector2: Vector) {\n  return {\n    x: vector1.x + vector2.x,\n    y: vector1.y + vector2.y\n  }\n}\n\nexport interface FlowGraph {\n  startId: string;\n  nodeMap: {\n    [key: string]: any\n  },\n  styles: any,\n}\n\nexport function parseToGraph(flowData: any, formStyles: any): FlowGraph {\n  let startNodeId = null;\n  const output: FlowGraph = {\n    startId: '',\n    nodeMap: {},\n    styles: formStyles\n  };\n  // Add all the nodes in first\n  for (const element of flowData) {\n    if (isNode(element)) {\n      if (element.type === \"input\") {\n        startNodeId = element.id;\n      } else if (element.type === \"question\") {\n        output.nodeMap[element.id] = {\n          type: 'question',\n          question: element.data.question,\n          answers: element.data.answers.map((a: any) => {\n            return {\n              text: a.text,\n              nextId: null\n            }\n          })\n        }\n      } else if (element.type === \"end\") {\n        output.nodeMap[element.id] = {\n          type: 'end',\n          result: element.data.result\n        }\n      }\n    }\n  }\n  if (startNodeId === null) {\n    console.log('There is no start node')\n  }\n  // Add all the edges\n  for (const element of flowData) {\n    if (isEdge(element)) {\n      if (element.source === startNodeId) {\n        output.startId = element.target;\n      } else {\n        output.nodeMap[element.source]\n          .answers[parseInt(element.sourceHandle!,10)].nextId = element.target;\n      }\n    }\n  }\n  return output;\n}\n\nexport function download(content: string, fileName: string, contentType: string) {\n  const a = document.createElement(\"a\");\n  const file = new Blob([content], {type: contentType});\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n}\n\nexport async function fileToJSON(file: File) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader()\n    fileReader.onload = event => resolve(JSON.parse(event!.target!.result as any))\n    fileReader.onerror = error => reject(error)\n    fileReader.readAsText(file)\n  })\n}","import { useRef, useState } from 'react';\nimport ReactFlow, {addEdge, Background, BackgroundVariant, ControlButton, Controls, MiniMap, updateEdge} from 'react-flow-renderer';\nimport styles from './App.module.css';\nimport ButtonEdge from './ButtonEdge';\nimport Header from './Header';\nimport { download, fileToJSON, parseToGraph, Vector, vectorAdd } from './helpers';\nimport Questionnode from './Questionnode';\nimport Sidepanel from './Sidepanel';\nimport React from 'react';\nimport Endnode from './Endnode';\nimport Form from './Form';\nimport { MdRemoveCircle } from \"react-icons/md\";\nimport { FaFlagCheckered, FaQuestionCircle, FaPlay } from \"react-icons/fa\";\n// @ts-ignore\nimport formHtml from \"./form.txt\";\nimport FormEditor from './FormEditor';\n\nexport enum NodeTypes {\n  Start,\n  Question,\n  End\n}\n\nexport const RemoveEdgeContext = React.createContext((id: string) => {});\n\nexport const SelectedNodeIdContext = React.createContext('');\n\nfunction App() {\n  const [ rfInstance, setRfInstance ] = useState(null);\n  const [ title, setTitle ] = useState('My Calculator');\n  const [ lastSelectedPos, setLastSelectedPos ] = useState({ x:300, y:300 });\n  const [ formStyles, setFormStyles ] = useState({});\n  const [ showForm, setShowForm ] = useState(false);\n  const fileInput = useRef(null);\n  /**\n   * The id of the node that is selected\n   */\n  const [ selectedNodeId, setSelectedNodeId ] = useState('');\n  /**\n   * Stores all the react flow node elements\n   */\n  const [ flowElements, setFlowElements ] = useState<Array<any>>([]);\n  const getSelectedNodeData = () => {\n    const target = flowElements.filter(o => o.id === selectedNodeId);\n    if (target.length === 0) {\n      return null;\n    }\n    return target[0];\n  }\n  const removeNode = (id: string) => {\n    const removed = flowElements.filter(o => o.id !== id);\n    // If none is removed do nothing\n    if (removed.length === flowElements.length) {\n      return;\n    }\n    setFlowElements(removed);\n  }\n  /**\n   * Update the data for one specific node with the given id\n   * @param id \n   * @param data \n   */\n  const setNode = (id: string, data: any) => {\n    const removed = flowElements.filter(o => o.id !== id);\n    // If none is removed do nothing\n    if (removed.length === flowElements.length) {\n      return;\n    }\n    setFlowElements(removed.concat([data]));\n  }\n  /**\n   * Used to create a node\n   */\n  const createNode = (type: NodeTypes) => {\n    const createStartNode = () => {\n      const element = {\n        id: Date.now().toString(),\n        type: 'input',\n        data: { label: 'Start Node' },\n        position: lastSelectedPos,\n        sourcePosition: 'right',\n        className: 'startNode',\n      }\n      setFlowElements(flowElements.concat([element]));\n      setLastSelectedPos(vectorAdd(element.position as Vector, { x: 100, y: 100 }));\n    }\n    const createQuestionNode = () => {\n      const element = {\n        id: Date.now().toString(),\n        type: 'question',\n        data: {\n          label: 'Question node',\n          question: 'My question',\n          answers: [\n            {\n              text: \"My Answer\",\n            },\n          ]\n        },\n        position: lastSelectedPos\n      }\n      setFlowElements(flowElements.concat([element]));\n      setLastSelectedPos(vectorAdd(element.position as Vector, { x: 100, y: 100 }));\n    }\n    const createEndNode = () => {\n      const element = {\n        id: Date.now().toString(),\n        type: 'end',\n        data: { label: 'End Node', result: 'My Result' },\n        position: lastSelectedPos\n      }\n      setFlowElements(flowElements.concat([element]));\n      setLastSelectedPos(vectorAdd(element.position as Vector, { x: 100, y: 100 }));\n    }\n    switch(type) {\n      case NodeTypes.Start:\n        createStartNode();\n        break;\n      case NodeTypes.Question:\n        createQuestionNode();\n          break;\n      case NodeTypes.End:\n        createEndNode();\n        break;\n      default:\n        throw new Error(`Invalid type of ${type}`);\n    }\n  }\n  const onLoadSave = async () => {\n    const domElem = fileInput.current as any;\n    domElem?.click();\n    domElem.onchange = async () => {\n      try {\n        const json: any = await fileToJSON(domElem.files[0]);\n        setFlowElements(json.elements);\n        setFormStyles(json.styles ?? {});\n      } catch (error) {\n        alert('Save file is invalid');\n        console.log(error);\n      }\n    }\n  }\n  const onExport = async () => {\n    // Convert to JSON\n    const formdata = JSON.stringify(parseToGraph(flowElements, formStyles));\n    // Read and parse template html file\n    const resp = await fetch(formHtml);\n    const htmlStr = await resp.text();\n    const formDoc = (new DOMParser()).parseFromString(htmlStr, \"text/html\");\n    // Add json to html file\n    formDoc.getElementById('form-json')!.textContent = formdata;\n    const outputStr = formDoc.documentElement.outerHTML;\n    download(outputStr, `${title.replace(' ', '_')}.html`, 'text/plain');\n  }\n  const onSave = async () => {\n    const data = (rfInstance as any).toObject();\n    data.styles = formStyles;\n    const dataJson = JSON.stringify(data);\n    download(dataJson, `${title.replace(' ', '_')}.json`, 'text/plain');\n  }\n  /**\n   * Called when a node is clicked\n   */\n  const onNodeClick = (event: any, element: any) => {\n    setLastSelectedPos(vectorAdd(element.position as Vector, { x: 100, y: 100 }));\n    setSelectedNodeId(element.id);\n  }\n  /**\n   * Called when an edge is updated\n   */\n  const onEdgeUpdate = (oldEdge: any, newConnection: any) => {\n    setFlowElements(updateEdge(oldEdge, newConnection, flowElements));\n  }\n  /**\n   * Caleld when two points are connected\n   */\n  const onConnect = (params: any) => {\n    // Create an edge\n    setFlowElements(addEdge({ ...params, type: 'buttonedge'}, flowElements))\n  }\n  const removeEdge = (id: string) => {\n    setFlowElements(flowElements.filter(e => e.id !== id))\n  }\n  const onTestForm = () => {\n    setShowForm(true);\n  }\n  const renderForm = () => {\n    if (showForm) {\n      return (\n        <div className={styles.backdrop}>\n          <div className={styles.backdropElementWrapper}>\n            <div className={styles.backdropMain}>\n              <FormEditor formStyles={formStyles} setFormStyles={setFormStyles}/>\n            </div>\n          </div>\n          <div className={styles.backdropElementWrapper}>\n            <div className={styles.backdropHeader}>\n              <MdRemoveCircle\n                className={styles.backdropRemoveBtn}\n                onClick={() => setShowForm(false)}/>\n            </div>\n            <div className={styles.backdropMain}>\n              <Form formData={parseToGraph(flowElements, formStyles)}/>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (null)\n  }\n  return (\n    <div className={styles.app}>\n      <input type=\"file\" \n        accept=\"application/JSON\"\n        className={styles.fileInput} ref={fileInput}/>\n      {renderForm()}\n      <Header\n        onTestForm={onTestForm}\n        onLoadSave={onLoadSave}\n        onSave={onSave}\n        onExport={onExport}\n        createNode={createNode} title={title} setTitle={setTitle}/>\n      <Sidepanel\n        deleteNode={() => removeNode(selectedNodeId)}\n        nodeData={getSelectedNodeData()}\n        setNodeData={(data: any) => setNode(selectedNodeId, data)}\n      />\n      <div className={styles.flowWrapper}>\n      <RemoveEdgeContext.Provider value={removeEdge}>\n        <SelectedNodeIdContext.Provider value={selectedNodeId}>\n          <ReactFlow\n            nodeTypes={{ question: Questionnode, end: Endnode }}\n            edgeTypes={{ buttonedge: ButtonEdge }}\n            elements={flowElements}\n            onElementClick={onNodeClick}\n            onEdgeUpdate={onEdgeUpdate}\n            onConnect={onConnect}\n            onLoad={(a: any) => setRfInstance(a)}\n          >\n            <Background\n              variant={BackgroundVariant.Dots}\n              gap={24}\n              size={1}\n            />\n            <MiniMap\n              nodeColor={(node) => {\n                switch (node.type) {\n                  case 'input':\n                    return '#FCB332';\n                  case 'question':\n                    return '#EB4B64';\n                  case 'end':\n                    return '#6CE063';\n                  default:\n                    return '#eee';\n                }\n              }}\n              nodeStrokeWidth={3}\n            />\n            <Controls className={styles.controls}>\n              <ControlButton onClick={() => createNode(NodeTypes.Start)}\n                className={styles.customControlBtn}>\n                <FaPlay className={styles.controlStartIcon}/>\n              </ControlButton>\n              <ControlButton onClick={() => createNode(NodeTypes.Question)}\n                className={styles.customControlBtn}>\n                <FaQuestionCircle className={styles.controlsQuestionIcon}/>\n              </ControlButton>\n              <ControlButton onClick={() => createNode(NodeTypes.End)}\n                className={styles.customControlBtn}>\n                <FaFlagCheckered className={styles.controlsEndIcon}/>\n              </ControlButton>\n            </Controls>\n          </ReactFlow>\n        </SelectedNodeIdContext.Provider>\n      </RemoveEdgeContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useContext } from \"react\";\nimport { Handle, Position } from \"react-flow-renderer\";\nimport { SelectedNodeIdContext } from \"./App\";\nimport styles from './Questionnode.module.css';\nexport interface Answer {\n  /**\n   * The text answer\n   */\n  text: string;\n  /**\n   * The id that this answer will go to\n   */\n  nextId: string;\n}\n\nexport interface QuestionNodeProps {\n  id: string;\n  data: {\n    question: string;\n    answers: Array<Answer>;\n  }\n}\n\nconst Questionnode: React.FC<QuestionNodeProps> = (props: QuestionNodeProps) => {\n  const selectedNodeId = useContext(SelectedNodeIdContext);\n  let wrapperClassName = `${styles.questionNodeWrapper}`\n  if (selectedNodeId === props.id) {\n    wrapperClassName = `${styles.questionNodeWrapper} ${styles.selected}`;\n  }\n  const makeAnswerHandles = () => props.data.answers.map((data, index) => (\n      <div key={index} className={styles.answerWrapper}>\n        <div className={styles.answerText}\n          dangerouslySetInnerHTML={{ __html: data.text }}\n        ></div>\n        <Handle\n          id = {`${index}`}\n          className='handleRight'\n          style={{ position: 'absolute',\n          }}\n          type=\"source\" position={Position.Right}/>\n      </div>\n    ))\n  \n  return (\n    <div className={wrapperClassName}>\n      <div className={styles.questionWrapper}>\n        <Handle\n          className='handleLeft'\n          style={{ position: 'absolute' }}\n          type=\"target\"\n          position={Position.Left}\n        />\n        <div className={styles.questionNodeText}\n          dangerouslySetInnerHTML={{ __html: props.data.question }}\n        ></div>\n      </div>\n      <div className={styles.answerList}>\n        {makeAnswerHandles()}\n      </div>\n    </div>\n  )\n}\n\nexport default Questionnode;","import { MdHighlightOff } from \"react-icons/md\";\nimport styles from './Sidepanel.module.css';\n\ninterface SidePanelProps {\n  nodeData: any;\n  setNodeData: Function;\n  deleteNode: Function;\n}\n\nconst Sidepanel: React.FC<SidePanelProps> = (props: SidePanelProps) => {\n  const setQuestion = (question: string) => {\n    const newNodeData = props.nodeData;\n    newNodeData.data.question = question;\n    props.setNodeData(newNodeData);\n  }\n  const setResultText = (text: string) => {\n    const newNodeData = props.nodeData;\n    newNodeData.data.result = text;\n    props.setNodeData(newNodeData);\n  }\n  const setAnswerText = (text: string, index: number) => {\n    const newNodeData = props.nodeData;\n    newNodeData.data.answers[index].text = text;\n    props.setNodeData(newNodeData);\n  }\n  const addAnswer = () => {\n    const newNodeData = props.nodeData;\n    newNodeData.data.answers.push({\n      text: \"My answer\",\n      nextId: null\n    })\n    props.setNodeData(newNodeData);\n  }\n  const removeAnswer = (i: number) => {\n    const newNodeData = props.nodeData;\n    newNodeData.data.answers.splice(i,1);\n    props.setNodeData(newNodeData);\n  }\n  const renderAnswers = (answers: Array<any>) => answers.map((a, index) => (\n    <div key={index} className={styles.answerWrapper}>\n      <div className={styles.answerHeader}>\n        <div className={styles.sidePanelLabel}>{`Answer ${index + 1}`}</div>\n        <MdHighlightOff \n          onClick={() => removeAnswer(index)}\n          className={styles.iconBtn}\n        />\n      </div>\n      <textarea\n        rows={7}\n        className={styles.sidePanelTextInput}\n        value={a.text}\n        onChange={e => setAnswerText(e.target.value, index)}\n      />\n    </div>\n  ))\n  if (props.nodeData == null) {\n    return (<div className={styles.sidePanel}>\n      Click a node to edit it.\n    </div>)\n  } else if (props.nodeData.type === \"question\") {\n    return (\n    <div className={styles.sidePanel}>\n      <div className={styles.sidePanelLabel}>Question</div>\n      <textarea\n        rows={7}\n        className={styles.sidePanelTextInput}\n        onChange={e => setQuestion(e.target.value)}\n        value={props.nodeData.data.question}\n      />\n      { renderAnswers(props.nodeData.data.answers) }\n      <button onClick={addAnswer} className={styles.panelBtn}>Add Answer</button>\n      <button onClick={e => props.deleteNode()}\n        className={styles.deleteBtn}>Delete Node</button>\n    </div>)\n  } else if (props.nodeData.type === \"end\") {\n    return (\n      <div className={styles.sidePanel}>\n        <div className={styles.sidePanelLabel}>Result</div>\n        <textarea\n          rows={7}\n          className={styles.sidePanelTextInput}\n          onChange={e => setResultText(e.target.value)}\n          value={props.nodeData.data.result}\n        />\n        <button onClick={e => props.deleteNode()}\n          className={styles.deleteBtn}>Delete Node</button>\n      </div>\n    )\n  } else if (props.nodeData.type === \"input\") {\n    return (\n      <div className={styles.sidePanel}>\n        <div className={styles.sidePanelLabel}>Start node</div>\n        <button onClick={e => props.deleteNode()}\n          className={styles.deleteBtn}>Delete Node</button>\n      </div>\n    )\n  }\n  return (\n    <div className={styles.sidePanel}>{JSON.stringify(props.nodeData, null, 1)}</div>\n  )\n}\n\nexport default Sidepanel;","import { useContext } from \"react\";\nimport { Handle, Position } from \"react-flow-renderer\";\nimport { SelectedNodeIdContext } from \"./App\";\nimport styles from './Endnode.module.css';\n\nexport interface EndNodeProps {\n  id: string;\n  data: {\n    result: string;\n  }\n}\n\nconst Endnode: React.FC<EndNodeProps> = (props: EndNodeProps) => {\n  const selectedNodeId = useContext(SelectedNodeIdContext);\n  let wrapperClassName = `${styles.wrapper}`\n  if (selectedNodeId === props.id) {\n    wrapperClassName = `${styles.wrapper} ${styles.selected}`;\n  }\n  return (\n    <div className={wrapperClassName}>\n      <Handle\n        className='handleLeft'\n        style={{ position: 'absolute' }}\n        type=\"target\"\n        position={Position.Left}\n      />\n      <div className={styles.resultText}\n        dangerouslySetInnerHTML={{ __html: props.data.result }}\n      ></div>\n    </div>\n  )\n}\n\nexport default Endnode;","import styles from './Form.module.css'\nimport React, { useState } from \"react\";\n\n// interface QuestionProps {\n//   question: string;\n//   answers: Array<any>;\n//   /**\n//    * The index of the answer selected\n//    */\n//   selectedAns: number | null;\n//   setSelectedAns: Function;\n//   style: any | null;\n// }\n\nconst Question = (props) => {\n  const renderAnswers = () => \n    props.answers.map((a, index) => (<Answer\n      key={index}   \n      text={a.text}\n      index={index}\n      selectedAns={props.selectedAns}\n      setSelectedAns={props.setSelectedAns}\n      style={props.answerStyles}\n      selectedStyle={props.selectedStyles}\n    />)\n  )\n  return  (\n    <div className={styles.questionWrapper}>\n      <div className={styles.questionText}\n        style={{ color: props.style.color, fontSize: `${props.style.fontSize}px`}}\n        dangerouslySetInnerHTML={{ __html: props.question }}\n      ></div>\n      { renderAnswers() }\n    </div>\n  )\n}\n\n// interface AnswerProps {\n//   text: string;\n//   index: number;\n//   selectedAns: number | null;\n//   setSelectedAns: Function;\n// }\n\nconst Answer = (props) => {\n\n  const onClick = () => {\n    if (props.selectedAns === props.index) {\n      props.setSelectedAns(null)\n    } else {\n      props.setSelectedAns(props.index)\n    }\n  }\n  if (props.selectedAns === props.index) {\n    return (\n      <div onClick={onClick} className={`${styles.answer} ${styles.selected}`}\n        style={{\n          border: `solid 2px ${props.selectedStyle?.color}`, \n          color: props.selectedStyle?.color,\n          backgroundColor: props.selectedStyle?.backgroundColor,\n        }}\n        dangerouslySetInnerHTML={{ __html: props.text }}\n      ></div>\n    )\n  }\n  return (\n    <div \n      style={{\n        border: `solid 2px ${props.style?.color}`, \n        fontSize: `${props.style?.fontSize}px`,\n        color: props.style?.color,\n        backgroundColor: props.style?.backgroundColor,\n      }}\n      onClick={onClick} className={styles.answer}>\n      {props.text}\n    </div>\n  )\n}\n\n/*\ninterface FormProps {\n  formData: {\n    startId: string;\n    nodeMap: {\n      [key: string]: any\n    },\n    styles: {\n      form?: {\n        backgroundColor?: string\n      }\n      question?: {\n        color?: string,\n        fontSize?: number,\n      },\n      answer?: {\n        fontSize?: number,\n        color?: string,\n        backgroundColor?: string,\n      },\n      selected?: {\n        color?: string;\n        backgroundColor?: string\n      },\n      result?: {\n        color?: string,\n        backgroundColor?: string,\n        fontSize?: number\n      },\n    }\n  };\n}\n*/\n\nconst Form = (props) => {\n  // This is a stack remembering the id of the questions to show\n  const [ questionStack, setQuestionStack ] = useState([]);\n  // Maps the question id to the answer index chosen\n  const [ answerMap, setAnswerMap ] = useState({});\n  const addToStack = (id) => {\n    setQuestionStack(questionStack.concat([id]));\n  }\n  if (!(props.formData.startId in props.formData.nodeMap)) {\n    return (\n      <div className={styles.formWrapper} style={props.formData?.styles?.form}>\n        Your form must have a valid start node\n      </div>\n    )\n  }\n  // Add the initial question if empty\n  if (questionStack.length === 0) {\n    addToStack(props.formData.startId);\n  }\n  const setSelectedAns = (qid, aid) => {\n    // Update question map\n    const newAMap = Object.assign({}, answerMap);\n    newAMap[qid] = aid;\n    // Update stack\n    const newStack = [];\n    let hasReached = false;\n    // Loop to te question that is changed\n    for (const currQid of questionStack) {\n      if (hasReached) {\n        newAMap[currQid] = null;\n      } else {\n        newStack.push(currQid);\n      }\n      if (qid === currQid) {\n        hasReached = true;\n      }\n    }\n    if (aid !== null) {\n      // Add the next node on\n      newStack.push(props.formData.nodeMap[qid].answers[aid].nextId);\n    }\n    setQuestionStack(newStack);\n    setAnswerMap(newAMap);\n  }\n  const renderQuestions = () => questionStack.map(\n    (id, index) => {\n      const qData = props.formData.nodeMap[id];\n      if (qData == null) {\n        return (null);\n      } else if (qData.type === 'question') {\n        return (\n          <Question\n            key={index}\n            question={`${index + 1}) ${qData.question}`}\n            answers={qData.answers}\n            selectedAns={answerMap[id] ?? null}\n            setSelectedAns={(i) => setSelectedAns(id, i)}\n            style={props.formData?.styles?.question ?? {}}\n            answerStyles={props.formData?.styles?.answer}\n            selectedStyles={props.formData?.styles?.selected}\n          />\n        )\n      } else if (qData.type === 'end') {\n        return (\n          <div key={index} className={styles.endWrapper}>\n            <div className={styles.endTitle}>Results</div>\n            <div style={{\n              fontSize: `${props.formData?.styles?.result?.fontSize}px`,\n              color: props.formData?.styles?.result?.color,\n              backgroundColor: props.formData?.styles.result?.backgroundColor,\n            }} className={styles.endResult}\n              dangerouslySetInnerHTML={{ __html: qData.result }}\n            ></div>\n          </div>\n        )\n      }\n      return (null);\n    }\n  )\n  return (\n    <div className={styles.formWrapper} style={props.formData?.styles?.form}>\n      { renderQuestions() }\n    </div>\n  )\n}\n\nexport default Form","export default __webpack_public_path__ + \"static/media/form.b6bcf46a.txt\";","import { useState } from 'react';\nimport styles from './FormEditor.module.css';\n\ninterface PanelProps {\n  panelId: number;\n  selectedId: number;\n  setSelectedId: Function;\n  children: any;\n}\n\nconst Panel: React.FC<PanelProps> = (props: PanelProps) => {\n  const onClick = () => {\n    props.setSelectedId(props.panelId);\n  }\n  const className = props.panelId === props.selectedId \n    ? `${styles.sideBarItem} ${styles.selected}` \n    : styles.sideBarItem;\n  return (\n    <div onClick={onClick} className={className}>\n      { props.children }\n    </div>\n  )\n}\n\ninterface FormEditorProps {\n  formStyles: {\n    form?: {\n      backgroundColor?: string\n    }\n    question?: {\n      color?: string,\n      fontSize?: number,\n    },\n    answer?: {\n      fontSize?: number,\n      color?: string,\n      backgroundColor?: string,\n    },\n    selected?: {\n      color?: string;\n      backgroundColor?: string\n    },\n    result?: {\n      color?: string,\n      backgroundColor?: string,\n      fontSize?: number\n    },\n  };\n  setFormStyles: Function;\n}\n\nconst FormEditor: React.FC<FormEditorProps> = (props: FormEditorProps) => {\n  const [ selected, setSelected] = useState<number>(0);\n  const setStyle = (key: string, data: any) => {\n    const copyObj: any = Object.assign({}, props.formStyles);\n    copyObj[key] = data;\n    props.setFormStyles(copyObj);\n  }\n  const setForm = (prop: string, value: any) => {\n    const formStyle: any = Object.assign({}, props.formStyles.form) ?? {};\n    formStyle[prop] = value;\n    setStyle('form', formStyle);\n  }\n  const setQuestion = (prop: string, value: any) => {\n    const questionStyle: any = Object.assign({}, props.formStyles.question) ?? {};\n    questionStyle[prop] = value;\n    setStyle('question', questionStyle);\n  }\n  const setAnswer = (prop: string, value: any) => {\n    const answerStyle: any = Object.assign({}, props.formStyles.answer) ?? {};\n    answerStyle[prop] = value;\n    setStyle('answer', answerStyle);\n  }\n  const setSelectedProp = (prop: string, value: any) => {\n    const selectedStyle: any = Object.assign({}, props.formStyles.selected) ?? {};\n    selectedStyle[prop] = value;\n    setStyle('selected', selectedStyle);\n  }\n  const setResult = (prop: string, value: any) => {\n    const resultStyle: any = Object.assign({}, props.formStyles.result) ?? {};\n    resultStyle[prop] = value;\n    setStyle('result', resultStyle);\n  }\n  const renderContent = () => {\n    switch (selected) {\n      case 0:\n        return (\n        <div>\n          <div className={styles.heading}>Form</div>\n          <div className={styles.property}>\n            <div className={styles.subheading}>Background Color</div>\n            <input \n              value={props.formStyles.form?.backgroundColor ?? '#ffffff'}\n              onChange={e => setForm('backgroundColor', e.target.value)}\n              type=\"color\"/>\n          </div>\n        </div>)\n      case 1:\n        return (\n        <div>\n          <div className={styles.heading}>Question</div>\n          <div className={styles.property}>\n            <div className={styles.subheading}>Color</div>\n            <input \n              value={props.formStyles.question?.color ?? '#000000'}\n              onChange={e => {setQuestion('color', e.target.value)}}\n              type=\"color\"/>\n          </div>\n          <div className={styles.property}>\n            <div className={styles.subheading}>Font Size</div>\n            <input \n              value={props.formStyles.question?.fontSize ?? 20}\n              onChange={e => {setQuestion('fontSize', e.target.value)}}\n              type=\"number\"/>\n          </div>\n          <div className={styles.heading}>Answer</div>\n          <div className={styles.property}>\n            <div className={styles.subheading}>Color</div>\n            <input \n              value={props.formStyles.answer?.color ?? '#000000'}\n              onChange={e => {setAnswer('color', e.target.value)}}\n              type=\"color\"/>\n          </div>\n          <div className={styles.property}>\n            <div className={styles.subheading}>Background Color</div>\n            <input \n              value={props.formStyles.answer?.backgroundColor ?? '#ffffff'}\n              onChange={e => {setAnswer('backgroundColor', e.target.value)}}\n              type=\"color\"/>\n          </div>\n          <div className={styles.property}>\n            <div className={styles.subheading}>Font Size</div>\n            <input \n              value={props.formStyles.answer?.fontSize ?? 20}\n              onChange={e => {setAnswer('fontSize', e.target.value)}}\n              type=\"number\"/>\n          </div>\n          <div className={styles.property}>\n            <div className={styles.subheading}>Selected Color</div>\n            <input \n              value={props.formStyles.selected?.color ?? '#ffffff'}\n              onChange={e => {setSelectedProp('color', e.target.value)}}\n              type=\"color\"/>\n          </div>\n          <div className={styles.property}>\n            <div className={styles.subheading}>Selected Background Color</div>\n            <input \n              value={props.formStyles.selected?.color ?? '#E34552'}\n              onChange={e => {setSelectedProp('backgroundColor', e.target.value)}}\n              type=\"color\"/>\n          </div>\n        </div>)\n      case 2:\n        return (\n        <div>\n          <div className={styles.heading}>Result</div>\n          <div className={styles.property}>\n            <div className={styles.subheading}>Color</div>\n            <input \n              value={props.formStyles.result?.color ?? '#ffffff'}\n              onChange={e => {setResult('color', e.target.value)}}\n              type=\"color\"/>\n          </div>\n          <div className={styles.property}>\n            <div className={styles.subheading}>Background Color</div>\n            <input \n              value={props.formStyles.result?.backgroundColor ?? '#1A192B'}\n              onChange={e => {setResult('backgroundColor', e.target.value)}}\n              type=\"color\"/>\n          </div>\n          <div className={styles.property}>\n            <div className={styles.subheading}>Font Size</div>\n            <input \n              value={props.formStyles.result?.fontSize ?? 30}\n              onChange={e => {setResult('fontSize', e.target.value)}}\n              type=\"number\"/>\n          </div>\n        </div>)\n      default:\n        throw new Error('Invalid panel id');\n    }\n  }\n  return (\n    <div className={styles.formEditor}>\n      <div className={styles.sideBar}>\n        <Panel panelId={0} selectedId={selected}\n          setSelectedId={setSelected}\n        >\n          Form\n        </Panel>\n        <Panel panelId={1} selectedId={selected}\n          setSelectedId={setSelected}\n        >\n          Question\n        </Panel>\n        <Panel panelId={2} selectedId={selected}\n          setSelectedId={setSelected}\n        >\n          Result\n        </Panel>\n      </div>\n      <div className={styles.main}>\n        { renderContent() }\n      </div>\n    </div>\n  )\n}\n\nexport default FormEditor;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst VERSION = '1.0.5';\n\nconsole.log(`Flow forms version: ${VERSION}`);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}